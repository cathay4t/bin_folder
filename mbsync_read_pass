#!/usr/bin/perl -w
#Copyright (C) 2012  Gris Ge <cnfourt@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use Expect;

my $home= "$ENV{HOME}";
my $command = 'mbsync';
my $tmo = 30;
my $notify_command = 'notify-send -t 10000';
my $syslog_command = 'logger -t $0 -i --';

sub syslog{
    system("$syslog_command '$_[0]'");
}

sub notify{
    my $str = $_[0];
    system("$notify_command '$str'");
    syslog $str;
}

sub main {
    my $group = $ARGV[0];
    my $passwd_file = $ARGV[1];
    my $conflict_file = "/tmp/imap_$group";
    if ( -e $conflict_file ){
        syslog "INFO: Another thread of mbsync is running for $group group";
        exit 0;
    }
    system("touch $conflict_file");
    my $exp = new Expect;
    $exp->log_stdout(1);
    $command .= " $group";
    unless ($exp->spawn($command)){
        notify "FAIL: Cannot spawn command $command";
        exit 1;
    }
    my $flag_retry = 0;
    $exp->expect(
        $tmo,
        [
            qr/Password.+:/,
            sub {
                my $exp = shift;
                my $passwd  = `cat $passwd_file`;
                chomp $passwd;
                $exp->send("$passwd\n");
                syslog "INFO: Syncing mailbox of $group\n";
                $exp->expect(undef);
            },
        ],
        [
            timeout => sub {
                notify "FAIL: Command $command timeout for expect checking";
              }
        ]
    );
    $exp->hard_close();
    system("rm $conflict_file");
    my $return_code = $exp->exitstatus();
    if ($return_code == 0){
        syslog "INFO: Mailbox of $group syncronization finished";
    }else{
        notify "FAIL: Command '$command' exit with error $return_code";
    }
    exit 0;
}

main();
